# XXX: Update to only support "fieldName op value"

grammar Relevance
  rule stmt
    i:comparison_statment op:combination_operator s:stmt {
      def tree
        [i.tree, op.tree, s.tree]
      end
    }
    / comparison_statment
  end

  rule comparison_statment
    i:item op:comparison_operator i2:item {
      def tree
        [i.tree, op.tree, i2.tree]
      end
    }
    / item
  end

  rule stmt_parens
    '(' ws s:stmt ws ')' {
      def tree
        s.tree
      end
    }
  end

  rule item
    identifier {
      def tree
        text_value.to_sym
      end
    }

    / constant

    / stmt_parens
  end

  rule comparison_operator
    ws op:comparison_op ws {
      def tree
        op.text_value.to_sym
      end
    }
  end

  rule combination_operator
    ws op:combination_op ws {
      def tree
        op.text_value.to_sym
      end
    }
  end

  rule comparison_op
    '==' / '!=' / '>=' / '<=' / '>' / '<'
  end

  rule combination_op
    '&&' / '||'
  end

  rule identifier
    [a-zA-Z] [a-zA-Z0-9_\[\]]*
  end

  rule constant
    number {
      def tree
        text_value.to_i
      end
    }

    / string {
      def tree
        text_value[1...-1]
      end
    }
  end

  rule number
    [1-9] [0-9]*
  end
 
  # XXX: Ask the mailing list about this one. :-/
  rule string
    double_quoted_string / single_quoted_string
  end

  rule single_quoted_string
    "'" (!"'" .)* "'" 
  end

  rule double_quoted_string
    '"' (!'"' . / '\"')* '"'
  end

  rule ws
    [\s]*
  end
end

